security:
    password_hashers:
        App\Core\Persistence\Entity\User:
            algorithm: 'auto'
    providers:
        app_user_provider:
            entity:
                class: App\Core\Persistence\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        not_secure:
            pattern: ^/api/v(\d+)/authorization/(register|restore_password|check_reset_token|change_password)
            stateless: true
            lazy: true
            provider: app_user_provider

        authorization:
            pattern: ^/api/v(\d+)/authorization/login
            stateless: true
            lazy: true
            provider: app_user_provider

            json_login:
                check_path: v1_authorization_login
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        main:
            lazy: true
            provider: app_user_provider
            jwt: ~
            logout:
                path: v1_authorization_logout

    access_control:
        - { path: ^/api/v(\d+)/authorization/(login|register|restore_password|check_reset_token|change_password), roles: PUBLIC_ACCESS }
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }

when@test:
    security:
        password_hashers:
            App\Core\Persistence\Entity\User:
                algorithm: plaintext
